---
- name: Add angie repo
  ansible.builtin.yum_repository:
    name: angie
    description: Angie repo
    baseurl: https://download.angie.software/angie/rocky/$releasever/
    gpgcheck: true
    enabled: true
    gpgkey: https://angie.software/keys/angie-signing.gpg.asc
    state: present

- name: Install angie
  ansible.builtin.dnf:
    name:
      - angie
      - angie-module-vts
      - python3-passlib
    state: present

- name: Make new dir for certs
  ansible.builtin.file:
    path: /etc/angie/certs
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Install certs
  ansible.builtin.copy:
    content: '{{ item.cert }}'
    dest: /etc/angie/certs/{{ item.name }}.crt
    owner: root
    group: root
    mode: '0644'
  loop: '{{ angie_certs }}'
  no_log: '{{ not debug }}'

- name: Install cert keys
  ansible.builtin.copy:
    content: '{{ item.key }}'
    dest: /etc/angie/certs/{{ item.name }}.key
    owner: root
    group: angie
    mode: '0640'
  loop: '{{ angie_certs }}'
  no_log: '{{ not debug }}'

- name: Update passwords
  ansible.builtin.include_tasks: passwd.yml
  loop: '{{ angie_passwd |
    ansible.builtin.dict2items(key_name="name", value_name="records") }}'
  loop_control:
    loop_var: passwd
  no_log: '{{ not debug }}'

- name: Configure angie
  ansible.builtin.template:
    src: '{{ angie_conf_template }}'
    dest: /etc/angie/angie.conf
    lstrip_blocks: true
    owner: root
    group: root
    mode: '0644'
  notify: Reload service angie

- name: Configure sites
  ansible.builtin.template:
    src: '{{ item }}.conf'
    dest: /etc/angie/http.d/{{ item }}.conf
    lstrip_blocks: true
    owner: root
    group: root
    mode: '0644'
  loop: '{{ angie_sites }}'
  notify: Reload service angie

- name: Remove default config
  ansible.builtin.file:
    path: /etc/angie/http.d/default.conf
    state: absent
  when: angie_sites
  notify: Reload service angie

- name: Enable and start service angie
  ansible.builtin.systemd_service:
    name: angie.service
    enabled: true
    state: started
  ignore_errors: '{{ ansible_check_mode }}'
...
