{% from 'elasticSend.j2' import elasticSend %}
# Send nginx messages to elasticsearch
template(name="elasticSearchNginx" type="list" option.json="on") {
  constant(value="{")
  constant(value="\"@timestamp\":\"")
    property(name="timereported" dateFormat="rfc3339")
  constant(value="\",\"host\":\"")
    property(name="hostname")
  constant(value="\",\"severity-num\":")
    property(name="syslogseverity")
  constant(value=",\"facility-num\":")
    property(name="syslogfacility")
  constant(value=",\"severity\":\"")
    property(name="syslogseverity-text")
  constant(value="\",\"facility\":\"")
    property(name="syslogfacility-text")
  constant(value="\",\"syslogtag\":\"")
    property(name="syslogtag")
  constant(value="\",\"programname\":\"")
    property(name="programname")
  constant(value="\",\"message\":\"")
    property(name="msg")
  constant(value="\",\"uid\":")
    property(name="$!uid")
  constant(value=",\"gid\":")
    property(name="$!gid")
  constant(value=",\"pid\":")
    property(name="$!pid")
  constant(value=",\"appname\":\"")
    property(name="$!appname")
  constant(value="\",\"cmd\":\"")
    property(name="$!cmd")
  constant(value="\"}")
}
template(name="elasticSearchNginxJson" type="list" option.json="on") {
  constant(value="{")
  constant(value="\"@timestamp\":\"")
    property(name="timereported" dateFormat="rfc3339")
  constant(value="\",\"host\":\"")
    property(name="hostname")
  constant(value="\",\"severity-num\":")
    property(name="syslogseverity")
  constant(value=",\"facility-num\":")
    property(name="syslogfacility")
  constant(value=",\"severity\":\"")
    property(name="syslogseverity-text")
  constant(value="\",\"facility\":\"")
    property(name="syslogfacility-text")
  constant(value="\",\"syslogtag\":\"")
    property(name="syslogtag")
  constant(value="\",\"programname\":\"")
    property(name="programname")
  constant(value="\",\"uid\":")
    property(name="$!uid")
  constant(value=",\"gid\":")
    property(name="$!gid")
  constant(value=",\"pid\":")
    property(name="$!pid")
  constant(value=",\"appname\":\"")
    property(name="$!appname")
  constant(value="\",\"cmd\":\"")
    property(name="$!cmd")
  constant(value="\",\"remote_addr\":\"")
    property(name="$!remote_addr")
  constant(value="\",\"remote_user\":\"")
    property(name="$!remote_user")
  constant(value="\",\"time_local\":\"")
    property(name="$!time_local")
  constant(value="\",\"request\":\"")
    property(name="$!request")
  constant(value="\",\"status\":")
    property(name="$!status")
  constant(value=",\"body_bytes_sent\":")
    property(name="$!body_bytes_sent")
  constant(value=",\"http_referer\":\"")
    property(name="$!http_referer")
  constant(value="\",\"request_time\":")
    property(name="$!request_time")
  constant(value=",\"http_user_agent\":\"")
    property(name="$!http_user_agent")
  constant(value="\",\"http_x_forwarded_for\":\"")
    property(name="$!http_x_forwarded_for")
  constant(value="\",\"request_host\":\"")
    property(name="$!request_host")
  constant(value="\",\"server_name\":\"")
    property(name="$!server_name")
  constant(value="\",\"request_uri\":\"")
    property(name="$!request_uri")
  constant(value="\",\"uri\":\"")
    property(name="$!uri")
  constant(value="\",\"upstream_cache_status\":\"")
    property(name="$!upstream_cache_status")
  constant(value="\",\"upstream_addr\":\"")
    property(name="$!upstream_addr")
  constant(value="\",\"upstream_status\":")
    property(name="$!upstream_status")
  constant(value=",\"upstream_connect_time\":")
    property(name="$!upstream_connect_time")
  constant(value=",\"upstream_response_time\":")
    property(name="$!upstream_response_time")
  constant(value="}")
}
template(
  name="elasticSearchIndexNginxAccess"
  type="string"
  string="nginx-access-%$YEAR%.%$MONTH%.%$DAY%"
)
template(
  name="elasticSearchIndexNginxError"
  type="string"
  string="nginx-error-%$YEAR%.%$MONTH%.%$DAY%"
)
input(
  type="imuxsock"
  socket="/var/run/rsyslog/nginx-access.sock"
  annotate="on"
  parseTrusted="on"
  useSysTimeStamp="on"
  createPath="on"
  ruleset="nginx-access"
)
input(
  type="imuxsock"
  socket="/var/run/rsyslog/nginx-error.sock"
  annotate="on"
  parseTrusted="on"
  usePIDFromSystem="on"
  useSysTimeStamp="on"
  createPath="on"
  ruleset="nginx-error"
)
ruleset(name="nginx-access") {
  action(type="mmjsonparse")
  {{
    elasticSend(es, 'elasticSearchIndexNginxAccess', 'elasticSearchNginxJson')
    | indent(2)
  }}
}
ruleset(name="nginx-error") {
  {{
    elasticSend(es, 'elasticSearchIndexNginxError', 'elasticSearchNginx')
    | indent(2)
  }}
}
